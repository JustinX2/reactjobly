{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\nclass JoblyApi {\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = {\n      Authorization: `Bearer ${JoblyApi.token}`\n    };\n    const params = method === \"get\" ? data : {};\n    try {\n      return (await axios({\n        url,\n        method,\n        data,\n        params,\n        headers\n      })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n  static async getCompanies(name) {\n    let res = await this.request('companies', {\n      name\n    });\n    return res.companies;\n  }\n  static async getJobs(title) {\n    let res = await this.request('jobs', {\n      title\n    });\n    return res.jobs;\n  }\n  static async applyToJob(id) {\n    let res = await this.request(`jobs/${id}/apply`, {}, 'post');\n    return res.message;\n  }\n  static async login(data) {\n    let res = await this.request('auth/token', data, 'post');\n    return res.token;\n  }\n  static async signup(data) {\n    let res = await this.request('auth/register', data, 'post');\n    return res.token;\n  }\n  static async getCurrentUser(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n  static async saveProfile(username, data) {\n    let res = await this.request(`users/${username}`, data, 'patch');\n    return res.user;\n  }\n}\nexport default JoblyApi;","map":{"version":3,"names":["axios","BASE_URL","process","env","REACT_APP_API_URL","JoblyApi","request","endpoint","data","method","console","debug","url","headers","Authorization","token","params","err","error","response","message","Array","isArray","getCompany","handle","res","company","getCompanies","name","companies","getJobs","title","jobs","applyToJob","id","login","signup","getCurrentUser","username","user","saveProfile"],"sources":["C:/Users/xujia/OneDrive/桌面/JoblyFrontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL=process.env.REACT_APP_API_URL || 'http://localhost:3001';\r\n\r\nclass JoblyApi{\r\n    static token;\r\n\r\n    static async request(endpoint, data = {}, method = \"get\") {\r\n        console.debug(\"API Call:\", endpoint, data, method);\r\n\r\n        const url = `${BASE_URL}/${endpoint}`;\r\n        const headers = { Authorization: `Bearer ${JoblyApi.token}` };\r\n        const params = (method === \"get\")\r\n            ? data\r\n            : {};\r\n\r\n        try {\r\n            return (await axios({ url, method, data, params, headers })).data;\r\n        } catch (err) {\r\n            console.error(\"API Error:\", err.response);\r\n            let message = err.response.data.error.message;\r\n            throw Array.isArray(message) ? message : [message];\r\n        }\r\n    }\r\n\r\n    static async getCompany(handle) {\r\n        let res = await this.request(`companies/${handle}`);\r\n        return res.company;\r\n    }\r\n\r\n    static async getCompanies(name){\r\n        let res = await this.request('companies', {name});\r\n        return res.companies;\r\n    }\r\n\r\n    static async getJobs(title){\r\n        let res = await this.request('jobs', {title});\r\n        return res.jobs;\r\n    }\r\n\r\n    static async applyToJob(id){\r\n        let res = await this.request(`jobs/${id}/apply`, {}, 'post');\r\n        return res.message;\r\n    }\r\n\r\n    static async login(data){\r\n        let res = await this.request('auth/token', data, 'post');\r\n        return res.token;\r\n    }\r\n\r\n    static async signup(data){\r\n        let res = await this.request('auth/register', data, 'post');\r\n        return res.token;\r\n    }\r\n\r\n    static async getCurrentUser(username){\r\n        let res = await this.request(`users/${username}`);\r\n        return res.user;\r\n    }\r\n\r\n    static async saveProfile(username, data){\r\n        let res = await this.request(`users/${username}`, data, 'patch');\r\n        return res.user;\r\n    }\r\n}\r\n\r\nexport default JoblyApi;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAEvE,MAAMC,QAAQ;EAGV,aAAaC,OAAOA,CAACC,QAAQ,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAEC,MAAM,GAAG,KAAK,EAAE;IACtDC,OAAO,CAACC,KAAK,CAAC,WAAW,EAAEJ,QAAQ,EAAEC,IAAI,EAAEC,MAAM,CAAC;IAElD,MAAMG,GAAG,GAAG,GAAGX,QAAQ,IAAIM,QAAQ,EAAE;IACrC,MAAMM,OAAO,GAAG;MAAEC,aAAa,EAAE,UAAUT,QAAQ,CAACU,KAAK;IAAG,CAAC;IAC7D,MAAMC,MAAM,GAAIP,MAAM,KAAK,KAAK,GAC1BD,IAAI,GACJ,CAAC,CAAC;IAER,IAAI;MACA,OAAO,CAAC,MAAMR,KAAK,CAAC;QAAEY,GAAG;QAAEH,MAAM;QAAED,IAAI;QAAEQ,MAAM;QAAEH;MAAQ,CAAC,CAAC,EAAEL,IAAI;IACrE,CAAC,CAAC,OAAOS,GAAG,EAAE;MACVP,OAAO,CAACQ,KAAK,CAAC,YAAY,EAAED,GAAG,CAACE,QAAQ,CAAC;MACzC,IAAIC,OAAO,GAAGH,GAAG,CAACE,QAAQ,CAACX,IAAI,CAACU,KAAK,CAACE,OAAO;MAC7C,MAAMC,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,GAAGA,OAAO,GAAG,CAACA,OAAO,CAAC;IACtD;EACJ;EAEA,aAAaG,UAAUA,CAACC,MAAM,EAAE;IAC5B,IAAIC,GAAG,GAAG,MAAM,IAAI,CAACnB,OAAO,CAAC,aAAakB,MAAM,EAAE,CAAC;IACnD,OAAOC,GAAG,CAACC,OAAO;EACtB;EAEA,aAAaC,YAAYA,CAACC,IAAI,EAAC;IAC3B,IAAIH,GAAG,GAAG,MAAM,IAAI,CAACnB,OAAO,CAAC,WAAW,EAAE;MAACsB;IAAI,CAAC,CAAC;IACjD,OAAOH,GAAG,CAACI,SAAS;EACxB;EAEA,aAAaC,OAAOA,CAACC,KAAK,EAAC;IACvB,IAAIN,GAAG,GAAG,MAAM,IAAI,CAACnB,OAAO,CAAC,MAAM,EAAE;MAACyB;IAAK,CAAC,CAAC;IAC7C,OAAON,GAAG,CAACO,IAAI;EACnB;EAEA,aAAaC,UAAUA,CAACC,EAAE,EAAC;IACvB,IAAIT,GAAG,GAAG,MAAM,IAAI,CAACnB,OAAO,CAAC,QAAQ4B,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC;IAC5D,OAAOT,GAAG,CAACL,OAAO;EACtB;EAEA,aAAae,KAAKA,CAAC3B,IAAI,EAAC;IACpB,IAAIiB,GAAG,GAAG,MAAM,IAAI,CAACnB,OAAO,CAAC,YAAY,EAAEE,IAAI,EAAE,MAAM,CAAC;IACxD,OAAOiB,GAAG,CAACV,KAAK;EACpB;EAEA,aAAaqB,MAAMA,CAAC5B,IAAI,EAAC;IACrB,IAAIiB,GAAG,GAAG,MAAM,IAAI,CAACnB,OAAO,CAAC,eAAe,EAAEE,IAAI,EAAE,MAAM,CAAC;IAC3D,OAAOiB,GAAG,CAACV,KAAK;EACpB;EAEA,aAAasB,cAAcA,CAACC,QAAQ,EAAC;IACjC,IAAIb,GAAG,GAAG,MAAM,IAAI,CAACnB,OAAO,CAAC,SAASgC,QAAQ,EAAE,CAAC;IACjD,OAAOb,GAAG,CAACc,IAAI;EACnB;EAEA,aAAaC,WAAWA,CAACF,QAAQ,EAAE9B,IAAI,EAAC;IACpC,IAAIiB,GAAG,GAAG,MAAM,IAAI,CAACnB,OAAO,CAAC,SAASgC,QAAQ,EAAE,EAAE9B,IAAI,EAAE,OAAO,CAAC;IAChE,OAAOiB,GAAG,CAACc,IAAI;EACnB;AACJ;AAEA,eAAelC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}