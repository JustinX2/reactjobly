{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xujia\\\\OneDrive\\\\\\u684C\\u9762\\\\JoblyFrontend\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport jwt from 'jsonwebtoken';\nimport Navigation from './Navigation';\nimport Routes from './Routes';\nimport UserContext from '../context/UserContext';\nimport JoblyApi from '../api/api';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport '../styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useLocalStorage(\"jobly-token\");\n  useEffect(() => {\n    async function getCurrentUser() {\n      if (token) {\n        try {\n          let {\n            username\n          } = jwt.decode(token);\n          JoblyApi.token = token;\n          let currentUser = await JoblyApi.getCurrentUser(username);\n          setCurrentUser(currentUser);\n        } catch (err) {\n          console.error(\"App loadUserInfo: problem loading\", err);\n          setCurrentUser(null);\n        }\n      }\n    }\n    getCurrentUser();\n  }, [token]);\n  function logout() {\n    setCurrentUser(null);\n    setToken(null);\n  }\n  async function login(loginData) {\n    try {\n      let token = await JoblyApi.login(loginData);\n      setToken(token);\n      return {\n        success: true\n      };\n    } catch (errors) {\n      console.error(\"login failed\", errors);\n      return {\n        success: false,\n        errors\n      };\n    }\n  }\n  async function signup(signupData) {\n    try {\n      let token = await JoblyApi.signup(signupData);\n      setToken(token);\n      return {\n        success: true\n      };\n    } catch (errors) {\n      console.error(\"signup failed\", errors);\n      return {\n        success: false,\n        errors\n      };\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: {\n        currentUser,\n        setCurrentUser\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {\n          logout: logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          login: login,\n          signup: signup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"k7T/y4T6x5yez9DlJpNNr1gGl6s=\", false, function () {\n  return [useLocalStorage];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","jwt","Navigation","Routes","UserContext","JoblyApi","useLocalStorage","jsxDEV","_jsxDEV","App","_s","currentUser","setCurrentUser","token","setToken","getCurrentUser","username","decode","err","console","error","logout","login","loginData","success","errors","signup","signupData","children","Provider","value","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/xujia/OneDrive/桌面/JoblyFrontend/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport jwt from 'jsonwebtoken';\r\nimport Navigation from './Navigation';\r\nimport Routes from './Routes';\r\nimport UserContext from '../context/UserContext';\r\nimport JoblyApi from '../api/api';\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\nimport '../styles/App.css';\r\n\r\nfunction App() {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [token, setToken] = useLocalStorage(\"jobly-token\");\r\n\r\n  useEffect(() => {\r\n    async function getCurrentUser() {\r\n      if (token) {\r\n        try {\r\n          let { username } = jwt.decode(token);\r\n          JoblyApi.token = token;\r\n          let currentUser = await JoblyApi.getCurrentUser(username);\r\n          setCurrentUser(currentUser);\r\n        } catch (err) {\r\n          console.error(\"App loadUserInfo: problem loading\", err);\r\n          setCurrentUser(null);\r\n        }\r\n      }\r\n    }\r\n    getCurrentUser();\r\n  }, [token]);\r\n\r\n  function logout() {\r\n    setCurrentUser(null);\r\n    setToken(null);\r\n  }\r\n\r\n  async function login(loginData) {\r\n    try {\r\n      let token = await JoblyApi.login(loginData);\r\n      setToken(token);\r\n      return { success: true };\r\n    } catch (errors) {\r\n      console.error(\"login failed\", errors);\r\n      return { success: false, errors };\r\n    }\r\n  }\r\n\r\n  async function signup(signupData) {\r\n    try {\r\n      let token = await JoblyApi.signup(signupData);\r\n      setToken(token);\r\n      return { success: true };\r\n    } catch (errors) {\r\n      console.error(\"signup failed\", errors);\r\n      return { success: false, errors };\r\n    }\r\n  }\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <UserContext.Provider value={{ currentUser, setCurrentUser }}>\r\n        <div className=\"App\">\r\n          <Navigation logout={logout} />\r\n          <Routes login={login} signup={signup} />\r\n        </div>\r\n      </UserContext.Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}